name: Publish Binaries

on:
  release:
    types: [published]

jobs:
  sencha:
    name: Build Sencha app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3 # For Sencha runtime
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: ruby/setup-ruby@v1 # For Sencha's SASS dependencies
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - run: sudo apt-get update
      - run: sudo apt-get install -y curl unzip libfreetype6 fontconfig
      - run: curl --silent http://cdn.sencha.com/cmd/6.6.0.13/no-jre/SenchaCmd-6.6.0.13-linux-amd64.sh.zip -o /tmp/sencha.zip
      - run: unzip /tmp/sencha.zip -d /tmp
      - run: chmod o+x /tmp/SenchaCmd-6.6.0.13-linux-amd64.sh
      - run: /tmp/SenchaCmd-6.6.0.13-linux-amd64.sh -q -Dall=true -dir /opt/Sencha/Cmd/6.6.0.13

      - name: Customizing the Sencha's output dir
        run: sed -i.bak 's/..\/librerambox-build/librerambox-build/' app.json

      - name: Build Sencha app
        run: /opt/Sencha/Cmd/sencha app build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/librerambox-build
          name: librerambox-build

  build:
    needs: sencha
    strategy:
      fail-fast: false
      matrix:
        job_name:
          - linux
          - osx
          - win
        include:
          - job_name: linux
            os: ubuntu-latest
          - job_name: osx
            os: macos-12
          - job_name: win
            os: windows-latest

    name: '${{ matrix.job_name }}'
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: librerambox-build
          path: .
      - uses: actions/setup-node@v3
        with:
          node-version: lts/hydrogen
      - run: npm i

      # Build Linux
      - name: Build on Linux
        run: 'npm run build:linux'
        if: success() && matrix.job_name == 'linux'

      - name: Upload Linux Packages
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/LibreRambox-*-linux-amd64.deb
            dist/LibreRambox-*-linux-amd64.snap
            dist/LibreRambox-*-linux-x86_64.AppImage
            dist/LibreRambox-*-linux-x86_64.rpm
            dist/LibreRambox-*-linux-x64.tar.gz
            dist/LibreRambox-*-linux-x64.zip
            dist/latest-linux.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.job_name == 'linux'

      # Build OSX
      - name: Build on OSX
        run: 'npm run build:osx'
        if: success() && matrix.job_name == 'osx'

      - name: Upload OSX Packages
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/LibreRambox-*-mac-universal.zip
            dist/LibreRambox-*-mac-universal.dmg
            dist/LibreRambox-*-mac-universal.dmg.blockmap
            dist/latest-mac.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.job_name == 'osx'

      # Build Windows
      - name: Build on Windows
        run: 'npm run build:win'
        if: success() && matrix.job_name == 'win'

      - name: Upload Windows Packages
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/LibreRambox-*-win.exe
            dist/LibreRambox-*-win-x64.zip
            dist/LibreRambox-*-win-ia32.zip
            dist/LibreRambox-*-win.exe.blockmap
            dist/latest.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.job_name == 'win'
